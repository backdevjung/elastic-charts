"use strict";(self.webpackChunkelastic_charts_docs=self.webpackChunkelastic_charts_docs||[]).push([[91194],{72695:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var t=r(74848),n=r(28453);const i={},a=void 0,c={id:"all-types/type-aliases/SeriesCompareFn",title:"SeriesCompareFn",description:"@elastic/charts \u2022 Exports",source:"@site/docs/all-types/type-aliases/SeriesCompareFn.md",sourceDirName:"all-types/type-aliases",slug:"/all-types/type-aliases/SeriesCompareFn",permalink:"/elastic-charts/all-types/type-aliases/SeriesCompareFn",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"SeriesColorsArray",permalink:"/elastic-charts/all-types/type-aliases/SeriesColorsArray"},next:{title:"SeriesIdentifier",permalink:"/elastic-charts/all-types/type-aliases/SeriesIdentifier"}},l={},o=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Source",id:"source",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"@elastic/charts"})," \u2022 ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/",children:"Exports"})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/",children:"@elastic/charts"})," / SeriesCompareFn"]}),"\n",(0,t.jsx)(s.h1,{id:"type-alias-seriescomparefn",children:"Type alias: SeriesCompareFn"}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"SeriesCompareFn"}),": (",(0,t.jsx)(s.code,{children:"siA"}),", ",(0,t.jsx)(s.code,{children:"siB"}),") => ",(0,t.jsx)(s.code,{children:"number"})]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"A compare function used to determine the order of the elements. It is expected to return\na negative value if first argument is less than second argument, zero if they're equal and a positive\nvalue otherwise."}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.p,{children:["\u2022 ",(0,t.jsx)(s.strong,{children:"siA"}),": ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/SeriesIdentifier",children:(0,t.jsx)(s.code,{children:"SeriesIdentifier"})})]}),"\n",(0,t.jsxs)(s.p,{children:["\u2022 ",(0,t.jsx)(s.strong,{children:"siB"}),": ",(0,t.jsx)(s.a,{href:"/elastic-charts/all-types/type-aliases/SeriesIdentifier",children:(0,t.jsx)(s.code,{children:"SeriesIdentifier"})})]}),"\n",(0,t.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"number"})}),"\n",(0,t.jsx)(s.h2,{id:"source",children:"Source"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://github.com/elastic/elastic-charts/blob/2eda7a2c2f/packages/charts/src/utils/series_sort.ts#L17",children:"packages/charts/src/utils/series_sort.ts:17"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["Generated using ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/typedoc-plugin-markdown",children:"typedoc-plugin-markdown"})," and ",(0,t.jsx)(s.a,{href:"https://typedoc.org/",children:"TypeDoc"})]})]})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>c});var t=r(96540);const n={},i=t.createContext(n);function a(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);